/**
 * CofeGB
 * CofeGB app rest api specification
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NavMenuItem model module.
 * @module model/NavMenuItem
 * @version 1.0.0
 */
class NavMenuItem {
    /**
     * Constructs a new <code>NavMenuItem</code>.
     * @alias module:model/NavMenuItem
     */
    constructor() { 
        
        NavMenuItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NavMenuItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NavMenuItem} obj Optional instance to populate.
     * @return {module:model/NavMenuItem} The populated <code>NavMenuItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NavMenuItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('route')) {
                obj['route'] = ApiClient.convertToType(data['route'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('warn')) {
                obj['warn'] = ApiClient.convertToType(data['warn'], 'Boolean');
            }
            if (data.hasOwnProperty('warnMsg')) {
                obj['warnMsg'] = ApiClient.convertToType(data['warnMsg'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
NavMenuItem.prototype['id'] = undefined;

/**
 * @member {String} title
 */
NavMenuItem.prototype['title'] = undefined;

/**
 * @member {String} route
 */
NavMenuItem.prototype['route'] = undefined;

/**
 * @member {String} icon
 */
NavMenuItem.prototype['icon'] = undefined;

/**
 * @member {String} query
 */
NavMenuItem.prototype['query'] = undefined;

/**
 * @member {Boolean} warn
 */
NavMenuItem.prototype['warn'] = undefined;

/**
 * @member {String} warnMsg
 */
NavMenuItem.prototype['warnMsg'] = undefined;






export default NavMenuItem;

